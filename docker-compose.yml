services:
  mongodb:
    container_name: "alertaqui_db_${NODE_ENV}"
    image: "alertaqui_db_${NODE_ENV}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
    build:
      context: ./database
      dockerfile: dockerfile
    ports:
      - 27017:27017
    volumes:
      - ./database/data:/data/db
    restart: always
    entrypoint: bash -c "docker-entrypoint.sh mongod | jq --unbuffered -r '.msg'"
    # healthcheck:
    #   test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
    #   interval: 10s
    #   timeout: 10s
    #   retries: 5
    #   start_period: 40s
  backend:
    container_name: "alertaqui_api_${NODE_ENV}"
    image: "alertaqui_api_${NODE_ENV}"
    environment:
      - NODE_ENV:${NODE_ENV}
    build:
      context: ./backend
      target: "${NODE_ENV}"
      dockerfile: dockerfile
    env_file:
      - .env
    ports:
      - 3000:3000
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    # depends_on:
    #   mongodb:
    #     condition: service_healthy
  web:
    container_name: "alertaqui_web_${NODE_ENV}"
    image: "alertaqui_web_${NODE_ENV}"
    environment:
      - NODE_ENV:${NODE_ENV}
    build:
      context: ./web
      target: "${NODE_ENV}"
      dockerfile: dockerfile
    env_file:
      - .env
    ports:
      - 8080:8080
    restart: unless-stopped
    depends_on:
      - backend